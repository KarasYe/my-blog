import{_ as s,o as a,c as l,V as p}from"./chunks/framework.a1fec281.js";const D=JSON.parse('{"title":"进阶指南","description":"","frontmatter":{},"headers":[],"relativePath":"Git/stash.md","filePath":"Git/stash.md","lastUpdated":1711963633000}'),n={name:"Git/stash.md"},o=p('<h1 id="进阶指南" tabindex="-1">进阶指南 <a class="header-anchor" href="#进阶指南" aria-label="Permalink to &quot;进阶指南&quot;">​</a></h1><h2 id="基础操作" tabindex="-1">基础操作 <a class="header-anchor" href="#基础操作" aria-label="Permalink to &quot;基础操作&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>[]</code>方括号中内容为可选，<code>[&lt;stash&gt;]</code>里面的 stash 代表进度的编号形如：<code>stash@{0}</code>, <code>&lt;&gt;</code>尖括号内的必填</p></div><p>对当前的暂存区和工作区状态进行保存。</p><div class="language-Bash"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span></span></code></pre></div><p>列出所有保存的进度列表。</p><div class="language-Bash"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">list</span></span></code></pre></div><p>恢复工作进度</p><div class="language-Bash"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pop</span><span style="color:#A6ACCD;"> [--index] </span><span style="color:#89DDFF;">[&lt;</span><span style="color:#A6ACCD;">stash</span><span style="color:#89DDFF;">&gt;]</span></span></code></pre></div><p><code>--index</code> 参数：不仅恢复工作区，还恢复暂存区 <code>&lt;stash&gt;</code> 指定恢复某一个具体进度。如果没有这个参数，默认恢复最新进度</p><p>如：以下命令恢复编号为 <code>0</code> 的进度的工作区和暂存区</p><div class="language-Bash"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pop</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--index</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash@{</span><span style="color:#F78C6C;">0</span><span style="color:#C3E88D;">}</span></span></code></pre></div><h2 id="进阶操作" tabindex="-1">进阶操作 <a class="header-anchor" href="#进阶操作" aria-label="Permalink to &quot;进阶操作&quot;">​</a></h2><div class="language-Bash"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> [save </span><span style="color:#C3E88D;">message]</span><span style="color:#A6ACCD;"> [-k</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;">--no-keep-index]</span><span style="color:#A6ACCD;"> [--patch]</span></span></code></pre></div><p>这是 git stash 保存进度的完整命令形式 使用 save 可以对进度添加备注</p><div class="language-Bash"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">save</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">这是保存的进度</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>现在执行 list，会发现后面会出现自定义的被合租</p><div class="language-Bash"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">list</span></span></code></pre></div><p><code>stash@{0}</code>: On master: 这是保存的进度</p><p><code>-k</code>和<code>--no-keep-index</code>指定保存进度后，是否重置暂存区 <code>--patch</code> 会显示工作区和 HEAD 的差异,通过编辑差异文件，排除不需要保存的内容。和<code>git add -p</code>命令类似</p><p>不删除已恢复的进度，其他同 git stash pop</p><div class="language-Bash"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">apply</span><span style="color:#A6ACCD;"> [--index] </span><span style="color:#89DDFF;">[&lt;</span><span style="color:#A6ACCD;">stash</span><span style="color:#89DDFF;">&gt;]</span></span></code></pre></div><p>删除某一个进度，默认删除最新进度</p><div class="language-Bash"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">drop</span><span style="color:#A6ACCD;"> [&lt;stash&gt;]</span></span></code></pre></div><p>删除所有进度</p><div class="language-Bash"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clear</span></span></code></pre></div><p>基于进度创建分支</p><div class="language-Bash"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">branch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">branchnam</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stas</span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>',28),e=[o];function t(c,r,i,C,d,y){return a(),l("div",null,e)}const A=s(n,[["render",t]]);export{D as __pageData,A as default};
