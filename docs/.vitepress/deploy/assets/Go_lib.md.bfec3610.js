import{_ as t,o as e,c as r,V as n}from"./chunks/framework.a1fec281.js";const h=JSON.parse('{"title":"标准库","description":"","frontmatter":{},"headers":[],"relativePath":"Go/lib.md","filePath":"Go/lib.md","lastUpdated":1711963633000}'),l={name:"Go/lib.md"},d=n('<h1 id="标准库" tabindex="-1">标准库 <a class="header-anchor" href="#标准库" aria-label="Permalink to &quot;标准库&quot;">​</a></h1><table><thead><tr><th style="text-align:center;">包名</th><th style="text-align:center;">功能</th></tr></thead><tbody><tr><td style="text-align:center;">bufio</td><td style="text-align:center;">带缓冲的 I/O 操作</td></tr><tr><td style="text-align:center;">bytes</td><td style="text-align:center;">实现字节操作</td></tr><tr><td style="text-align:center;">container</td><td style="text-align:center;">封装堆、列表和环形列表等容器</td></tr><tr><td style="text-align:center;">crypto</td><td style="text-align:center;">加密算法</td></tr><tr><td style="text-align:center;">database</td><td style="text-align:center;">数据库驱动和接口</td></tr><tr><td style="text-align:center;">debug</td><td style="text-align:center;">各种调试文件格式访问及调试功能</td></tr><tr><td style="text-align:center;">encoding</td><td style="text-align:center;">常见算法如 JSON、XML、Base64 等</td></tr><tr><td style="text-align:center;">flag</td><td style="text-align:center;">命令行解析</td></tr><tr><td style="text-align:center;">fmt</td><td style="text-align:center;">格式化操作</td></tr><tr><td style="text-align:center;">go</td><td style="text-align:center;">Go 语言的词法、语法树、类型等。可通过这个包进行代码信息提取和修改</td></tr><tr><td style="text-align:center;">html</td><td style="text-align:center;">HTML 转义及模板系统</td></tr><tr><td style="text-align:center;">image</td><td style="text-align:center;">常见图形格式的访问及生成</td></tr><tr><td style="text-align:center;">io</td><td style="text-align:center;">实现 I/O 原始访问接口及访问封装</td></tr><tr><td style="text-align:center;">math</td><td style="text-align:center;">数学库</td></tr><tr><td style="text-align:center;">net</td><td style="text-align:center;">网络库，支持 Socket、HTTP、邮件、RPC、SMTP 等</td></tr><tr><td style="text-align:center;">os</td><td style="text-align:center;">操作系统平台不依赖平台操作封装</td></tr><tr><td style="text-align:center;">path</td><td style="text-align:center;">兼容各操作系统的路径操作实用函数</td></tr><tr><td style="text-align:center;">plugin</td><td style="text-align:center;">Go 1.7 加入的插件系统。支持将代码编译为插件，按需加载</td></tr><tr><td style="text-align:center;">reflect</td><td style="text-align:center;">语言反射支持。可以动态获得代码中的类型信息，获取和修改变量的值</td></tr><tr><td style="text-align:center;">regexp</td><td style="text-align:center;">正则表达式封装</td></tr><tr><td style="text-align:center;">runtime</td><td style="text-align:center;">运行时接口</td></tr><tr><td style="text-align:center;">sort</td><td style="text-align:center;">排序接口</td></tr><tr><td style="text-align:center;">strings</td><td style="text-align:center;">字符串转换、解析及实用函数</td></tr><tr><td style="text-align:center;">time</td><td style="text-align:center;">时间接口</td></tr><tr><td style="text-align:center;">text</td><td style="text-align:center;">文本模板及 Token 词法器</td></tr></tbody></table>',2),a=[d];function s(i,c,g,x,y,o){return e(),r("div",null,a)}const m=t(l,[["render",s]]);export{h as __pageData,m as default};
